
; file       :  base.asm
; Aunthor    :
; Date       :
; Class      : jud-3
; Assume     :size of all numbers is byte unsigned number
; Version    :2
		IDEAL
		
		MODEL small

		STACK 256
		
                ONE_KEY equ   2h
                TWO_KEY  equ  3h
                THREE_KEY    equ 4h
                screen_RAM_graphics EQU 0A000h


		
		DATASEG
;-----  The maze
placePicXcar dw 280
placepicycar dw 20
currentXPic dw 0
placepicxprinces dw 210
placepicyprinces dw 130

	




	currentYPic dw 0
		crwon db	    07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,14,14,14,07,07,07,07,07,07,07,07,07
				db		07,07,07,07,07,07,07,07,14,14,14,07,07,07,07,07,07,07,07,07
				db		07,07,07,14,14,07,07,07,07,14,07,07,07,07,14,14,07,07,07,07
				db		07,07,07,14,14,07,07,07,14,14,14,07,07,07,14,14,07,07,07,07
				db		07,07,07,07,14,07,07,14,14,12,14,14,07,07,14,07,07,14,14,07
				db		14,14,07,07,14,14,07,14,12,12,12,14,07,14,14,07,07,14,14,07
				db		14,14,14,07,09,09,07,14,12,12,12,14,09,09,14,07,14,14,07,07
				db		07,14,10,14,09,09,14,14,14,12,14,14,09,09,14,14,10,14,07,07
				db		07,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,07,07
				db		07,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,07,07
				db		07,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,07,07
				db		07,14,12,14,10,14,09,14,14,12,14,14,09,14,10,14,12,14,07,07
				db		07,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,07,07
	
    shura1 db "Dear player we need your help!$",13,10
    shura2 db"Today the witch kidnap princes and$",13,10
    shura3 db"the wonderwoman need to save her$",13,10
    shura4 db "The witch locked the princes in$",13,10
	shura5 db "her castle and you are the$" ,13,10
	shura6 db "only one who can save her$"	,13,10		 
	shura7 db "Your missions are:$",13,10
    shura8 db "1. Drive with the car to the$",13,10
    shura9 db "witch's casle: collect the ward$",13,10
    shura10 db "and the princes's crown$",13,10
    shura11 db "2.collect the flowers and$" ,13,10
   shura12 db "take the castle's key$",13,10
   shura13 db "3.run away from the the$",13,10
   shura14 db "witches and riched to the castle$",13,10
   shura15 db "                                  ",13,10 
   shura16 db "Press 1 to continue",13,10
   
   play1 db "1. play$"
   play2 db "2. exit$"
   
   
	endText1 db "Very good wonderwoman!$",13,10
    endText2 db "The princes is free now$",13,10
	endText3 db "                        ",13,10 
    endText4 db "Press escape for the menu$",13,10
              		 
    
    textGame db 'The game$'
    textHelp db 'The help$'
     currentXWitch dw 0
    currentYWitch dw 0
	placePicXWitch dw 270   
     placePicYWitch  dw 130
    currentXMaze dw 50
	currentYMaze dw 50
	x_last dw 0
	y_last dw 0
	x_start dw 0 
	y_start dw 0
    currentXman dw 0
	currentYman dw 00
	placePicXMan dw 280
	placePicYMan dw 20
    currentXWonder dw 80
    currentYWonder dw 80
	placePicXWonder dw 239    
     placePicYWonder  dw 130
	
	 princes 		db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,11,00,11,00,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,06,00,13,00,13,00,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,06,06,12,13,06,00,00,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,14,14,00,00,00,00,00,14,00,00,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,00,14,14,14,14,14,14,14,14,14,14,14,00,11,11
			db		11,11,11,11,11,11,11,11,11,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00,11
			db		11,11,11,11,11,11,11,11,11,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,11
			db		11,11,11,11,11,11,11,11,11,11,00,14,14,14,14,14,14,14,00,00,14,14,00,00,14,14,00
			db		11,11,11,11,11,11,11,11,11,00,14,14,14,14,14,14,14,00,00,15,00,00,15,00,14,14,00
			db		11,11,11,11,11,11,11,11,11,11,00,14,14,14,00,00,00,15,15,00,15,15,00,15,00,00,11
			db		11,11,11,11,11,11,11,11,11,11,00,14,14,14,00,15,00,15,15,00,15,15,00,15,00,11,11
			db		11,11,11,11,11,11,11,11,11,00,14,14,14,14,00,12,14,15,15,15,15,15,15,15,00,11,11
			db		11,11,11,11,11,11,11,11,00,14,14,00,14,14,14,05,00,15,15,15,12,12,15,15,00,00,11
			db		11,11,11,11,11,11,11,11,11,00,00,14,14,14,14,14,14,00,15,15,15,15,15,00,11,00,11
			db		11,11,11,11,11,11,11,11,11,11,00,14,14,14,14,00,00,00,00,00,13,13,00,00,00,11,11
			db		11,11,11,11,11,11,11,11,11,00,14,14,14,14,00,12,12,14,13,12,12,14,04,13,12,00,11
			db		11,11,11,11,11,11,11,11,11,00,14,14,14,00,12,12,12,12,12,12,12,12,12,00,12,00,11
			db		11,11,11,11,11,11,11,11,11,11,00,14,14,00,13,13,12,12,04,13,00,00,12,00,12,00,11
			db		11,11,11,11,11,11,11,11,11,11,11,00,14,14,00,00,15,04,04,12,12,12,12,00,13,00,11
			db		11,11,11,11,11,11,11,11,11,11,00,14,14,14,14,00,15,15,00,13,13,13,00,13,00,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,00,14,14,14,00,15,15,00,04,04,04,00,00,15,00,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,15,15,15,00,13,13,00,15,15,00,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,13,00,15,15,15,00,15,00,15,00,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,13,13,00,00,15,15,00,15,15,00,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,00,13,13,13,13,00,00,15,00,15,00,00,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,00,13,13,13,12,12,12,00,00,00,13,12,00,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,00,13,13,12,04,12,12,12,04,12,12,04,12,00,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,00,05,05,12,04,05,05,12,04,05,12,04,12,00,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,00,05,05,12,04,05,05,12,04,05,12,04,05,13,00
			db		11,11,11,11,11,11,11,11,11,11,11,00,05,05,12,04,05,05,05,12,04,05,12,12,04,13,00
			db		11,11,11,11,11,11,11,11,11,11,11,00,05,05,12,04,05,05,05,12,04,05,05,12,04,13,00
			db		11,11,11,11,11,11,11,11,11,11,11,00,05,05,12,04,05,05,05,12,04,05,05,12,04,13,00
				db	11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00


	 castle db      11,11,11,11,11,00,11,11,11,11,11,11,00,04,04,04,04,04,11,11
			db		11,11,11,11,11,00,11,11,11,11,11,11,00,04,04,04,11,11,11,11
			db		11,11,11,11,00,04,00,11,11,11,11,11,00,11,11,11,11,11,11,11
			db		11,11,11,00,04,04,04,00,00,11,00,11,00,00,00,00,11,11,11,11
			db		11,11,11,00,00,00,00,00,15,00,15,00,15,00,15,00,11,11,11,11
			db		11,11,11,00,15,15,15,00,15,15,15,15,15,15,15,00,11,11,11,11
			db		11,11,11,00,15,00,15,00,15,00,15,00,15,00,15,00,11,11,11,11
			db		11,11,11,00,15,15,15,00,04,04,04,04,04,04,04,00,11,11,11,11
			db		11,11,00,00,00,15,00,00,15,15,00,00,15,15,15,00,11,11,11,11
			db		11,11,00,04,00,00,15,15,00,00,15,15,00,15,15,00,11,11,11,11
			db		11,00,04,04,04,00,15,15,15,15,15,15,00,15,15,00,11,11,11,11
			db		11,00,04,04,04,00,15,00,15,15,00,15,00,15,00,00,11,11,11,11
				db	11,00,00,00,00,00,15,00,15,15,00,15,00,00,04,00,00,11,11,11
				db	11,00,15,15,15,00,15,15,15,15,15,15,00,04,04,04,00,11,11,11
				db	11,00,15,00,00,00,15,00,00,00,00,15,00,00,00,04,00,11,11,11
				db	11,00,15,00,15,00,00,00,15,15,15,00,00,15,00,00,00,11,11,11
			db		11,00,15,00,15,15,15,15,00,00,15,15,15,15,00,15,00,11,11,11
			db		11,00,15,00,15,15,15,00,00,00,00,15,15,15,00,15,00,11,11,11
			db		11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11

	 
	 
	 
	 man db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
		db	11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,11
		db	11,11,11,11,11,00,00,00,00,14,00,00,00,00,11,11,11,11,11,11
		db	11,11,11,11,00,00,00,00,14,14,14,00,00,00,00,11,11,11,11,11
		db	11,11,11,11,00,00,14,14,14,04,14,14,14,00,00,11,11,11,11,11
		db	11,11,00,00,00,14,14,14,04,04,04,14,14,14,00,00,00,11,11,11
		db	11,00,00,00,00,14,14,14,14,04,14,14,14,14,00,00,00,00,11,11
	db		11,00,00,00,00,06,06,06,06,06,06,06,06,06,00,00,00,00,11,11
		db	11,00,00,00,00,06,06,15,00,06,15,00,06,06,00,00,00,00,11,11
		db	11,11,11,00,00,00,06,00,00,06,00,00,06,00,00,00,11,11,11,11
		db	11,11,00,00,00,00,06,06,06,06,06,06,06,00,00,00,00,11,11,11
		db	11,00,00,00,00,00,00,06,06,06,06,06,00,00,00,00,00,00,11,11
		db	11,00,00,00,00,00,06,00,00,00,00,00,06,00,00,00,00,00,11,11
		db	11,00,00,11,00,06,06,14,14,14,14,14,06,06,00,11,00,00,11,11
		db	11,00,11,00,06,06,00,04,04,14,04,04,00,06,06,00,11,00,11,11
	db		11,11,00,06,06,06,00,14,14,14,14,14,00,06,06,06,00,11,11,11
	db		11,11,00,06,06,00,11,01,15,01,15,01,11,00,06,06,00,11,11,11
	db		11,11,11,00,00,11,04,04,01,15,01,04,04,11,00,00,11,11,11,11
	db		11,11,11,11,11,04,04,04,11,11,11,04,04,04,11,11,11,11,11,11
		db	11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11

	 
	 
ward1 db       07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		db		07,07,07,07,12,07,07,07,07,07,12,07,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,14,07,07,07,07,14,07,07,07,07,12,07,07,07,07
		db		07,07,07,07,07,07,14,07,07,07,14,07,07,07,14,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,07,07,07,07,07,14,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,14,07,07,07,07,07,07,07,07,07,07,07
		db		07,07,07,12,14,14,07,07,14,14,14,14,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,14,14,14,14,07,07,14,14,12,07,07,07
		db		07,07,07,07,07,07,14,14,14,14,14,14,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,06,14,14,14,14,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,06,06,07,14,07,07,07,07,07,07,07,07,07,07
	db			07,07,07,07,07,06,06,07,07,14,07,07,14,07,07,07,07,07,07,07
		db		07,07,07,07,06,06,07,07,07,07,07,07,07,14,07,07,07,07,07,07
		db		07,07,07,06,06,07,07,07,07,07,14,07,07,07,12,07,07,07,07,07
		db		07,07,06,06,07,07,07,07,07,07,14,07,07,07,07,07,07,07,07,07
		db		07,06,06,07,07,07,07,07,07,07,12,07,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07

pinkflower db   10,10,10,10,10,00,00,10,00,00,10,10,10,10,10,10,10,10,10,10
			db	00,00,00,10,00,15,15,00,15,15,00,10,00,00,00,10,10,10,10,10
			db	00,02,02,00,15,12,12,15,12,12,15,00,02,02,00,10,10,10,10,10
			db	00,02,02,00,15,12,12,12,12,12,15,00,02,02,00,10,10,10,10,10
			db	10,00,00,00,04,12,12,12,12,12,04,00,00,00,15,10,10,10,10,10
			db	10,00,15,15,00,04,12,04,12,04,00,04,15,15,00,10,10,10,10,10
			db	00,15,12,12,04,00,04,04,04,00,04,12,12,12,15,00,10,10,10,10
			db	00,15,12,12,12,04,00,14,00,04,12,12,12,12,15,00,10,10,10,10
			db	10,00,12,12,04,04,14,14,14,04,04,12,12,15,00,10,10,10,10,10
			db	00,15,12,12,12,04,00,14,00,04,12,12,12,12,15,00,10,10,10,10
			db	00,15,12,12,04,00,04,04,04,00,04,12,12,12,15,00,10,10,10,10
			db	10,00,15,04,00,04,12,04,12,04,00,04,15,15,00,10,10,10,10,10
			db	10,00,00,00,04,12,12,12,12,12,04,00,00,00,10,10,10,10,10,10
			db	00,02,02,00,15,12,12,12,12,12,15,00,02,02,00,10,10,10,10,10
			db	00,02,02,00,15,12,12,15,12,12,15,00,02,02,00,10,10,10,10,10
			db	00,00,00,10,00,15,15,00,15,15,00,10,00,00,00,10,10,10,10,10
			db	10,10,10,10,10,00,00,10,00,00,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			
blueFlower db 10,10,10,10,10,01,01,01,10,10,14,14,10,10,10,10,10,10,10,10
			db	10,10,10,01,01,09,09,01,01,10,14,14,10,10,10,10,10,10,10,10
			db	10,10,01,09,09,09,09,09,01,14,14,01,01,01,10,10,10,10,10,10
			db	10,10,01,09,09,09,09,09,14,14,09,09,09,09,01,10,10,10,10,10
			db	10,10,01,01,09,09,09,09,14,14,09,09,09,09,01,10,10,10,10,10
			db	10,10,10,01,01,09,09,09,14,12,09,09,09,09,01,02,02,10,10,10
			db	10,01,01,01,01,01,09,09,14,12,09,09,09,01,02,10,10,02,02,10
			db	01,09,09,01,01,01,09,09,12,01,01,01,01,01,01,02,10,02,02,02
			db	01,09,09,09,09,01,01,01,12,01,01,01,09,09,01,01,02,02,02,02
			db	01,09,09,09,09,09,01,09,01,09,01,09,09,09,09,01,02,02,02,10
			db	01,09,09,09,01,01,09,09,01,09,01,01,09,09,09,01,10,10,10,10
			db	01,09,09,01,01,01,09,09,01,09,01,01,01,01,01,10,10,10,10,10
		db		10,01,01,01,10,01,09,09,09,09,09,01,02,02,02,10,10,10,10,10
			db	10,10,10,10,10,01,09,09,09,09,01,01,02,10,02,02,10,10,10,10
			db	10,10,10,10,10,10,01,01,01,01,01,02,10,10,02,02,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,02,02,02,02,02,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,02,02,02,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10


		
ward2 db       07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,14,07,07,07,07,07,07,07,07,07,07
			db 	07,07,07,07,07,07,07,07,14,14,14,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,14,14,14,14,14,14,14,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,14,14,14,14,14,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,13,14,14,14,07,07,07,07,07,07,07,07,07
		db 		07,07,07,13,13,07,13,14,14,10,14,14,07,07,07,07,07,07,07,07
		db 		07,07,13,07,07,13,09,14,07,13,07,14,07,07,07,07,07,07,07,07
		db 		07,07,07,09,07,07,09,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,07,09,07,09,09,05,07,07,10,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,05,05,05,07,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,07,05,07,07,07,07,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,05,07,07,07,07,07,07,07,10,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,10,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,13,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,10,07,07,07,07,07,07,07,07,07,07
		db 		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		

     	 
	 
       key  db    10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db 	10,10,10,00,00,00,00,00,00,00,00,00,00,00,10,10,10,10,10,10
			db 	10,10,00,00,15,14,14,14,14,14,14,14,14,00,00,10,10,10,10,10
			db 	10,10,00,15,14,06,06,06,06,06,06,06,14,06,00,10,10,10,10,10
			db 	10,10,00,15,14,06,00,00,00,00,00,15,14,06,00,10,10,10,10,10
			db 	10,10,00,15,14,06,00,05,05,05,00,15,14,06,00,10,10,10,10,10
		db 		10,10,00,15,14,06,00,05,05,05,00,15,14,06,00,10,10,10,10,10
		db 		10,10,00,15,14,06,00,00,00,00,00,15,14,06,00,10,10,10,10,10
		db 		10,10,00,15,14,14,14,14,14,14,14,14,14,06,00,10,10,10,10,10
		db 		10,10,00,00,06,06,06,06,06,06,06,06,06,00,00,10,10,10,10,10
		db 		10,10,10,00,00,00,00,00,00,00,00,00,00,00,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,15,14,06,00,10,10,10,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,15,14,06,00,00,00,00,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,15,14,06,00,14,15,00,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,15,14,06,00,00,00,00,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,15,14,06,00,14,15,00,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,15,14,06,00,14,15,00,10,10,10,10,10,10
		db 		10,10,10,10,10,10,00,06,06,06,00,06,06,00,10,10,10,10,10,10
	db 			10,10,10,10,10,10,00,00,00,00,00,00,00,00,10,10,10,10,10,10
	db 			10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10




greenSpace  db 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10





    Witch  db        01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,01,01,01,01,01,01,01,01,01,01,01,01,01,01
			db 	 	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,01,01,01,01,01,01,01,01,01,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,08,01,01,01,01,01,01,01,01,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,08,08,08,01,01,01,01,01,01,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,00,00,00,00,00,01,01,01,01,01,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,00,00,00,00,00,08,08,01,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,00,00,00,08,08,08,08,08,08,08,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,00,00,00,00,08,08,08,08,08,08,08,08,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,08,08,08,08,08,08,08,08,08,08,01,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,08,08,08,08,00,00,00,00,00,00,00,04,04,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,00,00,02,02,00,00,00,00,00,12,04,04,04,01,01
db 					01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,02,02,02,02,02,02,02,02,02,00,00,04,12,04,04,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,02,02,06,02,02,02,02,06,02,00,04,12,04,12,04,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,02,02,02,02,02,02,02,02,02,00,04,04,12,04,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,02,02,02,02,02,02,02,02,00,04,04,04,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,02,02,02,02,02,02,00,00,04,04,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,02,02,00,00,00,04,04,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,08,08,00,00,08,00,00,04,00,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,08,08,00,00,00,00,04,08,00,00,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,08,02,02,02,00,00,02,02,02,08,00,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,08,08,08,02,02,02,02,02,02,08,08,00,01,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,00,00,00,04,00,00,08,08,08,08,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,00,00,00,04,04,00,00,00,08,08,08,08,01,01,01,01
		db 			01,01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,00,00,04,04,00,00,00,00,00,08,08,08,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,08,00,04,04,00,00,00,00,00,00,00,08,08,08,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,00,04,04,00,00,00,00,00,00,00,00,08,08,08,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,08,08,08,08,00,04,04,00,00,00,00,00,00,00,00,00,00,08,08,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,08,08,08,00,00,04,04,00,00,00,00,00,00,00,00,00,00,00,08,08,01,01,01
db 					01,01,01,01,01,01,01,01,01,01,08,08,08,00,04,04,00,00,00,00,00,00,00,00,00,00,00,00,08,08,01,01,01
db 					01,01,01,01,01,01,01,01,01,08,08,08,08,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,08,08,01,01,01
db 					01,01,01,01,01,01,01,01,08,08,08,08,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,08,08,01,01,01
	db 				01,01,01,01,01,01,01,08,08,08,00,00,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,08,08,01,01,01
	db 				01,01,01,01,01,01,01,01,01,00,00,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,00,04,00,00,00,02,02,00,00,00,00,00,02,02,00,00,00,00,01,01,01,01,01
	db 				01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,01,01,01,01,01,00,00,01,01,01,01,01,01,01,01,01




		
	 wonderWoman db   01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01
	              db 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,00,00,01,01,01,01,01,01,01,01
                  db  01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,00,00,00,00,01,01,01,01,01,01,01
                   db 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,14,14,14,00,00,00,00,00,01,01,01,01,01,01
                   db 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,14,14,04,14,14,00,00,00,00,01,01,01,01,01,01
                   db 01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,14,14,04,04,04,14,14,00,00,00,01,01,01,01,01,01
                   db 01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,06,06,06,06,06,06,06,00,00,00,00,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,06,00,00,00,00,00,00,00,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,15,11,15,06,15,11,15,00,00,00,00,00,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,06,06,06,06,06,06,06,00,00,00,00,00,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,06,06,06,06,06,06,06,00,00,00,00,00,00,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,06,06,13,13,13,06,06,00,00,00,00,00,00,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,06,06,06,06,06,00,00,00,00,00,00,00,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,00,00,06,06,06,00,00,00,00,00,00,00,00,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,00,06,06,06,06,06,06,06,06,00,00,00,00,00,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,06,06,06,06,06,06,06,06,06,06,06,06,00,00,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,00,01,00,00,00,06,06,14,14,14,06,06,06,14,14,14,06,06,00,00,00,01,00,01
				db	01,01,01,01,01,01,01,01,01,01,00,00,00,00,00,06,14,14,14,14,13,13,13,14,14,14,14,06,00,00,00,00,00,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,00,00,00,06,04,04,04,04,14,14,14,04,04,04,04,06,06,00,00,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,06,06,04,04,04,04,04,04,04,04,04,04,04,06,06,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,06,06,06,06,04,04,11,04,04,04,04,04,11,04,04,06,06,06,06,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,11,14,14,14,14,14,14,14,14,14,11,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,11,15,11,14,14,14,14,14,11,15,11,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,13,13,15,11,14,14,14,11,15,13,13,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,13,13,13,15,11,14,11,15,13,13,13,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,06,06,13,13,15,11,15,13,13,06,06,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,06,06,06,13,13,15,13,13,06,06,06,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,06,06,06,01,01,01,01,01,06,06,06,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,06,06,06,01,01,01,01,01,06,06,06,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,06,06,06,01,01,01,01,01,06,06,06,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,04,04,04,01,01,01,01,01,04,04,04,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,11,11,11,01,01,01,01,01,11,11,11,01,01,01,01,01,01,01
				db	01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,13,13,13,01,01,01,01,01,13,13,13,01,01,01,01,01,01,01
				db  01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01 

maze_max_x equ 16
mone_shura dw 0
maze_max_y equ 9
mone_Tur db 0 
placePicX dw 0
placePicY dw 0
currentX dw 0
currentY dw 0
check dw 0
play     db 04,04,04,04,11,04,11,11,11,11,04,04,04,04,11,04,11,11,11,04
		 db	04,11,11,04,11,04,11,11,11,11,04,11,11,04,11,04,11,11,11,04
		 db	04,11,11,04,11,04,11,11,11,11,04,11,11,04,11,04,11,11,11,04
		 db	04,11,11,04,11,04,11,11,11,11,04,11,11,04,11,04,11,11,11,04
		 db	04,11,11,04,11,04,11,11,11,11,04,11,11,04,11,04,11,11,11,04
		 db	04,11,11,04,11,04,11,11,11,11,04,11,11,04,11,04,11,11,11,04
		 db	04,11,11,04,11,04,11,11,11,11,04,11,11,04,11,04,04,04,04,04
		 db	04,04,04,04,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
	 db		04,11,11,11,11,04,11,11,11,11,04,04,04,04,11,11,11,04,11,11
	 db		04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
	 db		04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,11,11,11,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,04,04,04,11,04,11,11,04,11,11,11,04,11,11
		 db	04,11,11,11,11,04,04,04,04,11,04,11,11,04,11,11,11,04,11,11







misgeret db 4,4,4,2,4,4,4,2,2,4,2,4,2,2,4,4
         db 4,2,2,2,4,2,4,2,4,2,4,2,4,2,4,2
		 db 4,2,4,2,4,4,4,2,4,2,4,2,4,2,4,4
		 db 4,2,4,2,4,2,4,2,4,2,2,2,4,2,4,2
		 db 4,4,4,2,4,2,4,2,4,2,2,2,4,2,4,4
	     db 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
	     db 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
	     db 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
         db 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
		 db 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
		

firstscreenpic db 8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0
               db 0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8
		       db 8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0
		       db 0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8
	           db 8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0
	           db 0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8
	           db 8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0
               db 0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8
		       db 8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0
		       db 0,8,0,8,0,8,0,8,0,8,0,8,0,8,0,8		 
		 
fenceMaze    db 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
			 db 5,7,6,7,6,6,6,6,7,6,6,7,5,6,6,5
			 db 5,6,5,5,5,5,5,5,5,5,6,6,5,5,6,5
			 db 5,7,6,6,6,7,6,6,7,5,6,6,6,5,7,5
			 db 5,5,5,5,6,5,5,5,5,5,6,7,6,6,6,5
			 db 5,7,6,6,7,6,5,-2,6,5,5,5,5,5,5,5
			 db 5,6,5,5,5,5,5,5,7,6,7,6,7,6,6,5
			 db 5,6,6,7,5,6,6,6,5,5,5,5,5,6,7,5
			 db 5,5,5,6,6,7,5,6,6,7,6,6,7,6,6,5
             db 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5

		 
gardenMaze   db 8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8
			 db 8,3,9,8,9,8,0,9,9,8,0,9,9,8,9,8
			 db 8,9,9,8,0,8,9,8,0,8,9,8,9,8,9,8
			 db 8,8,0,8,9,8,9,8,9,8,9,8,0,8,0,8
			 db 8,9,9,8,9,8,9,8,0,8,0,8,9,8,9,8
			 db 8,9,8,8,0,8,9,8,9,8,9,8,9,8,9,8
			 db 8,9,9,8,9,8,0,8,9,8,9,8,0,8,9,8
			 db 8,8,0,8,9,8,9,8,9,8,0,8,9,8,0,8
			 db 8,9,9,9,0,9,9,8,0,9,9,8,9,9,9,8
             db 8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8	
			 
			 
greenMan         db 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
				db	10,10,10,10,10,10,10,00,00,00,00,00,10,10,10,10,10,10,10,10
				db	10,10,10,10,10,00,00,00,00,14,00,00,00,00,10,10,10,10,10,10
				db	10,10,10,10,00,00,00,00,14,14,14,00,00,00,00,10,10,10,10,10
				db	10,10,10,10,00,00,14,14,14,04,14,14,14,00,00,10,10,10,10,10
				db	10,10,00,00,00,14,14,14,04,04,04,14,14,14,00,00,00,10,10,10
				db	10,00,00,00,00,14,14,14,14,04,14,14,14,14,00,00,00,00,10,10
				db	10,00,00,00,00,06,06,06,06,06,06,06,06,06,00,00,00,00,10,10
				db	10,00,00,00,00,06,06,15,00,06,15,00,06,06,00,00,00,00,10,10
				db	10,10,10,00,00,00,06,00,00,06,00,00,06,00,00,00,10,10,10,10
				db	10,10,00,00,00,00,06,06,06,06,06,06,06,00,00,00,00,10,10,10
				db	10,00,00,00,00,00,00,06,06,06,06,06,00,00,00,00,00,00,10,10
				db	10,00,00,00,00,00,06,00,00,00,00,00,06,00,00,00,00,00,10,10
				db	10,00,00,10,00,06,06,14,14,14,14,14,06,06,00,10,00,00,10,10
				db	10,00,10,10,06,06,00,04,04,14,04,04,00,06,06,00,10,00,10,10
				db	10,10,00,06,06,06,00,14,14,14,14,14,00,06,06,06,00,10,10,10
				db	10,10,00,06,06,00,10,01,15,01,15,01,10,00,06,06,00,10,10,10
				db	10,10,10,00,00,10,04,04,01,15,01,04,04,10,00,00,10,10,10,10
				db	10,10,10,10,10,04,04,04,10,10,10,04,04,04,10,10,10,10,10,10
				db	10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10




			 
			 
fence db        07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
		db		07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
		db		07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,07
			db	07,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07,00,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		 
    car db 07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,04,04,04,04,04,04,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,04,00,00,00,00,00,00,04,07,07,07,07
	db		07,07,07,07,07,07,07,04,00,00,00,00,00,00,00,00,04,07,07,07
	db		07,07,07,07,07,07,07,04,00,00,00,00,00,00,00,00,04,07,07,07
	db		07,07,07,07,07,04,04,04,00,00,00,00,00,00,00,00,00,04,07,07
	db		07,07,07,07,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,07
	db		07,07,07,04,12,12,12,12,12,12,12,12,12,12,12,12,12,12,04,07
	db		07,07,14,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,14,07
	db		07,07,08,08,08,08,00,00,08,08,08,08,08,08,08,00,00,08,08,07
	db		07,07,07,07,07,07,00,00,07,07,07,07,07,07,07,00,00,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
	db		07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07



witchMaze    db 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
			 db 1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1
			 db 1,2,2,2,2,2,2,1,2,2,2,2,1,2,2,1
			 db 1,2,1,1,1,1,1,2,2,1,1,1,1,2,2,1
			 db 1,2,1,2,2,2,1,2,1,2,2,2,2,2,2,1
			 db 1,2,2,2,2,2,1,2,1,2,1,1,1,1,1,1
			 db 1,1,1,1,1,2,1,2,1,2,2,2,2,2,2,1
			 db 1,2,1,2,2,2,1,2,1,1,1,1,1,2,2,1
	         db 1,-1,2,2,1,2,1,2,2,2,2,2,2,2,2,1
			 db 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

title_maxX equ 20
title_maxY equ 20
	 

	smallWitch   db       11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
				db	11,11,11,11,11,11,11,05,05,05,05,11,11,11,11,11,11,11,11,11
				db	11,11,11,11,11,05,05,05,05,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,05,05,05,05,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,05,05,05,05,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,05,05,05,05,05,05,05,05,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,15,00,15,14,14,11,11,11,11,11,11,11,11,11,11,11
				db	11,11,15,15,15,15,15,15,14,14,14,11,11,11,11,11,11,11,11,11
		db			11,11,11,11,15,04,15,15,15,14,14,14,14,11,11,11,11,11,11,11
			db		11,11,11,11,15,15,02,02,02,02,14,14,14,14,11,11,11,11,11,11
			db		11,11,11,11,11,02,02,02,00,02,02,02,14,14,14,11,11,11,11,11
			db		11,11,11,11,11,02,02,02,00,02,02,02,11,11,11,11,11,11,11,11
			db		11,11,11,11,02,02,02,02,00,02,02,02,02,11,11,11,11,11,11,11
		db			11,11,02,02,02,02,02,00,02,02,02,02,02,02,11,11,11,11,11,11
		db			11,00,00,15,15,02,02,02,02,02,02,02,02,00,00,00,11,00,00,11
		db			11,11,00,15,15,02,02,02,02,02,02,02,02,11,11,00,00,11,11,11
			db		11,11,11,11,02,02,02,00,02,02,00,02,02,02,11,11,11,00,00,11
			db		11,11,11,11,11,11,00,00,11,00,00,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11


grayspace          db 07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			 db 07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
		     db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07
			db	07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07



bluespace     db       11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db		11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11



  

		start_maze_x  dw 0
		start_maze_y dw 0

		x       dw  ?
		y       dw  ?
		temp_x  dw ?
		temp_y  dw ?



		CODESEG

Start:
        mov ax, @data
        mov ds, ax
        	
		
First: 
    mov ax , 0013h
    int 10h
    call clearScrean
    mov bh,0
    mov dh,0
    mov dl,0
    mov ah,2
    int 10h
    call Main

   
Exit:
        mov ax, 4C00h
        int 21h

;----------------------------------------------------------
;  Draw picture
;----------------------------------------------------------
; Input:
;   non
; Output/Function operation:
; 	Drawing the picture that her size is only 20X20 .
; Registers
;	bx,si,al,cx,dx,ah
;----------------------------------------------------------	
Proc draw
    push [placePicX]  ;תחילת מקום הציור באיקס
    pop [currentX]     ;מצביע על מיקום נוכחי באיקס
    push [placePicY]
    pop [currentY]
    push [placePicX]
    pop bx
    add bx,20   ;הוספת רוחב התמונה על מנת לבדוק גבולות ציור
	push [placePicY] ;הוספת אורך תמונות על מנת לבדוק גבולות 
	pop [check]
	add [check],20
	
again: 
    mov cx,[currentX]
    mov dx,[currentY]
	mov al,[byte si]    ;העברת הבייט שמצביע עליו אס אי לתוך אוגר שאחראי על הצבע
	mov ah,0ch
	inc si          ;הגדלת אס איי למען קידום המצביע על הצבעים בסיבוב הלולאה הבא
  	int 10h
    inc [currentX]   ;קידום מצביע על מיקום האיקס
  cmp [currentX],bx    ; השווה של האיקס הנוכחי ב20 בגבולות הרוחב
    jne again        ;אם ציור השורה לא הסתיים הלולאה ממשיכה
    inc [currentY]  ;אם השורה הסתיימה מוסיפים את וואי באחד ומציירים שורה חדשה
    push [placePicX]   ;מאתחלים את המיקום של האיקס
	pop [currentX]
	push ax   ;שמירה על הערך שבax
	push [check]
	pop ax
    cmp [currentY],ax  ;השוואה בין גבולות האורך לבין המצביע הנוכחי לפי Y
	pop ax
    jnz again
	
	
	ret
	ENDP draw


;----------------------------------------------------------
;  Draw maze
;----------------------------------------------------------
; Input:
;   non
; Output/Function operation:
; 	Drawing the maze according to the array.
; Registers
;	 si,di
;----------------------------------------------------------	
Proc drawMaze

tur:
	cmp [mone_Tur],16 ;בודקים אם נגמרה שורה
	je shura
    cmp [byte di],1h   
    je witch@
	cmp [byte di],2h   
    je bluespace@
	cmp [byte di],3h   
    je key@
	cmp [byte di],4h   
    je pic4
	cmp [byte di],5h   
    je pic5              
	cmp [byte di],6h   
    je pic6
	cmp [byte di],7h   
    je pic7
	cmp [byte di],8h   
    je pic8
	cmp [byte di],9h   
    je pic9
	cmp [byte di],0   
    je pic0
	cmp [byte di],-1   
    je pic11
	cmp [byte di],-2  
    je pic12
pic5:
    jmp fence@	
shura:
      inc [mone_shura]  ; מוסיפים אחד למונה של כל השורות
      mov [mone_tur],0   ;מתחילים טור מחדש ומאפסים אותן
	  mov [placePicX],0  
      add [placePicY],20
      cmp [mone_shura],10
	  je done15
	  jmp tur

witch@:
    mov si,offset smallWitch   ;קביעת ערך si ככתובת של תחילת התמונה שנבחרה וקיראה לפונקציה שתצייר את התמונה
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur
pic4:
    jmp man@

bluespace@:
    mov si,offset bluespace
	call draw
	inc di 
	inc [mone_tur]
	add [placePicX],20
	jmp tur

pic6:
     jmp graySpace@	
done15:
       jmp done
pic7:
     jmp ward@	
key@:
    mov si,offset key
	call draw
	inc di 
	inc [mone_tur]
	add [placePicX],20
	jmp tur
pic8:
    jmp pinkFlowe@	
pic9:
    jmp greenspace@	
pic0:
    jmp blueFlower@	
pic11:
     jmp castle@
pic12:
     jmp crown@		 
man@:
    mov si,offset man
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur
	
fence@:
     mov si,offset fence
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur
graySpace@:
     mov si,offset graySpace
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur	 
	close27:
       jmp pic11
ward@:
    mov si,offset ward2
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur

pinkFlowe@:
     mov si,offset pinkflower
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur	
greenspace@:
     mov si,offset greenSpace
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur
blueFlower@:
     mov si,offset blueFlower
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur	
     
castle@:
     mov si,offset castle
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur	 
crown@:
     mov si,offset crwon
    call draw
	inc di	
	inc [mone_tur]
	add [placePicX],20
	jmp tur	 		
  done:
   mov [mone_Tur],0
   mov [mone_shura],0   
   mov [placePicX],0
   mov [placepicy],0
	ret
    ENDP drawmaze
;----------------------------------------------------------
;  First screen
;----------------------------------------------------------
; Input:
;   non
; Output/Function operation:
; 	The help for the game
; Registers
;	 ah,bh,bl,cs,dl,al,ds,es,bp
;----------------------------------------------------------	
proc firstScreen

    mov [placepicxprinces],200
	mov[placepicyprinces],146
	mov [placePicXWonder],229
	mov [placePicYWonder],146
	mov[placePicxWitch],260
	mov[placePicYWitch],146
	call drawprinces
	call drawWonder
	call drowWitch





	mov di,offset firstscreenpic
	call drawMaze	
	mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 30		; number of characters
    mov dl,3		; starting column
    mov dh, 3	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura1
    int 10h
	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 34		; number of characters
    mov dl,3		; starting column
    mov dh, 4	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura2
    int 10h	

mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 32		; number of characters
    mov dl,3		; starting column
    mov dh, 5	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura3
    int 10h	
		
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 31		; number of characters
    mov dl,3		; starting column
    mov dh, 6	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura4
    int 10h	
	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 26		; number of characters
    mov dl,3		; starting column
    mov dh, 7	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura5
    int 10h	
		
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 25		; number of characters
    mov dl,3		; starting column
    mov dh, 8	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura6
    int 10h
	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 18		; number of characters
    mov dl,3		; starting column
    mov dh, 9	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura7
    int 10h	
		
	mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 28		; number of characters
    mov dl,3		; starting column
    mov dh, 10	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura8
    int 10h	
	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx,31		; number of characters
    mov dl,3		; starting column
    mov dh, 11	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura9
    int 10h	

mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 23		; number of characters
    mov dl,3		; starting column
    mov dh, 12	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura10
    int 10h	

mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 25		; number of characters
    mov dl,3		; starting column
    mov dh, 13	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura11
    int 10h

mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 21		; number of characters
    mov dl,3	; starting column
    mov dh, 14	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura12
    int 10h		


mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 23		; number of characters
    mov dl,3		; starting column
    mov dh, 15	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura13
    int 10h		

	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 32	     	; number of characters
    mov dl,3		; starting column
    mov dh, 16	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura14	
    int 10h	
	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 33	     	; number of characters
    mov dl,3		; starting column
    mov dh, 17	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura15	
    int 10h	
	
mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001010b	; attribute
    mov cx, 19	     	; number of characters
    mov dl,3		; starting column
    mov dh, 18	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset shura16	
    int 10h	
call drawWonder
call drawprinces
call drowWitch	
not5:
call getkey
cmp ah,one_key
jne not5
ret
ENDP firstscreen
;----------------------------------------------------------
; Main screan
;----------------------------------------------------------
; Input:
;   non
; Output/Function operation:
; 	The menu,the options:play/exit
; Registers
;	 di,ah,bh,bl,cx,dl,dh,al,ds,es,bp
;----------------------------------------------------------
PROC Main
first7:
    call clearScrean
	mov di,offset misgeret
	mov [placepicxprinces],210
	mov[placepicyprinces],130
	mov [placePicXWonder],239
	mov [placePicYWonder],130
	mov[placePicxWitch],270
	mov[placePicYWitch],130
	call drawmaze
	call drawWonder
	call drawprinces
	call drowWitch
	mov [placepicxprinces],0
	mov[placepicyprinces],130
	mov [placePicXWonder],29
	mov [placePicYWonder],130
	mov[placePicxWitch],60
	mov[placePicYWitch],130
	call drawprinces
	call drawWonder
	call drowWitch
	
	mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001100b	; attribute
    mov cx, 7		; number of characters
    mov dl, 16		; starting column
    mov dh, 16	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset play1
    int 10h	
	
	mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001100b	; attribute
    mov cx, 7		; number of characters
    mov dl,  16		; starting column
    mov dh, 17 ; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset play2
    int 10h	
	
	call getkey
    cmp al,ONE_KEY
    je game
    cmp ah,TWO_KEY
    je exit2
  
                
game:
    call ClearScrean
    call procGame
    jmp first7


exit2:
    call procExit


done1:
    ret
ENDP  Main


;----------------------------------------------------------
; Clear screan proc
;----------------------------------------------------------
; Input:
;   No input.
; Output/Function operation:
; Blue clear screan
; Registers
; ax,es,di,al,ah
;----------------------------------------------------------
PROC ClearScrean
   mov ax, screen_RAM_graphics
    mov es, ax; es:di - video memory
    xor di, di
    mov cx,320*200/2
    mov al,11        ; color
    mov ah,11           ; color
    rep stosw
    ret; mov es:[di],ax add di,2
ENDP ClearScrean
;----------------------------------------------------------
; End screen
;----------------------------------------------------------
; Input:
; 	No input
; Output/Function operation:
;  The end screan
;"very good..."
; Registers
; cx,ah,bh,bl,dl,dh,ds,es,bp
;----------------------------------------------------------
PROC endSCrean
call clearScrean
mov di,offset firstscreenpic
call drawmaze
    mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001100b	; attribute
    mov cx, 22		; number of characters
    mov dl,7		; starting column
    mov dh, 5	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset endtext1
	int 10h

    mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001100b	; attribute
    mov cx, 23		; number of characters
    mov dl,7		; starting column
    mov dh, 6	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset endtext2
	int 10h
	
    mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001100b	; attribute
    mov cx, 23		; number of characters
    mov dl,7		; starting column
    mov dh, 7	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset endtext3
	int 10h
	
    mov ah, 13h
    mov bh, 0		; video page number
    mov bl,0001100b	; attribute
    mov cx, 25		; number of characters
    mov dl,7		; starting column
    mov dh, 8	; starting row
    mov al, 0		; 0-3 indicating mode
    push ds
    pop es		; es:bp pointer to string to be written
    mov bp, offset endtext4
    int 10h	
	
    mov [placepicxprinces],105
	mov[placepicyprinces],100
	mov [placePicXWonder],134
	mov [placePicYWonder],100
	mov[placePicxWitch],165
	mov[placePicYWitch],100
	call drawprinces
	call drawWonder
	call drowWitch
call drawprinces
call drowWitch
call drawWonder

get19:
call getkey
cmp ah,1h
jne get19
ret 
ENDP endSCrean
;----------------------------------------------------------
; Game proc
;----------------------------------------------------------
; Input:
; 	no input
; Output/Function operation:
; the play-three levels of maze
; Registers
; dx,ah
;----------------------------------------------------------
PROC procGame
   call clearScrean
   call firstScreen
leve1:
   mov di,offset fencemaze
   call drawMaze
    mov [placePicYcar],20
    mov [placePicXcar],280
   call drawcar
   mov di,0
   mov di,offset fencemaze
   add di,30
   
get:
   cmp [byte di],-2   ;בדיקה אם השחקן הגיע לכתר
   je level2
   call getKey
   cmp ah,1h
   je go
   cmp ah,1ch
   je level2
   call move1
   jmp get
   
level2:  
      mov [placePicYman],20
      mov [placePicXMan],280
      mov di,0
      mov di,offset gardenmaze
      call drawMaze
	  mov si ,offset greenMan
      call drawMan
      mov di,offset gardenmaze
      add di,30 
 get8:
   cmp [byte di],3      ;בבדיקה אם השחקן הגיע למפתח
   je level3
   call getKey
   cmp ah,1h
   je go
   cmp ah,1ch
   je level3
   call move2
   jmp get8   
go:
    call main
level3:  
      mov [placePicYman],20
      mov [placePicXMan],280
      mov di,0
      mov di,offset witchmaze
      call drawMaze
	  mov si,offset man
      call drawMan
      mov di,offset witchmaze
      add di,30 
 get18:
    cmp [byte di],-1   ;בדיקה אם השחקן הגיע לטירה
	JE endscrean8
   call getKey
   cmp ah,1h
   je go
    cmp ah,1ch
   je  endscrean8
   call move3
   jmp get18      
endscrean8:
call endSCrean    
key3:
call getkey
cmp ah,1h
je done5 
jmp key3
done5:
call main 

    ret
ENDP  procGame


;----------------------------------------------------------
;  Exit
;----------------------------------------------------------
; Input:
; 	No input
; Output/Function operation:
;  Exit from the game.
; Registers
;   ax,ah
;--------------------------------------------------------
PROC procExit
mov ax,03h
 int 10h
mov ah, 04ch
int 21h
ret
ENDP procExit
;--------------------------------------------------------
;Proc draw wonder
;----------------------------------------------------------
; Input:
; 	No input
; Output/Function operation:
;   The drawing of wonder woman.
;Registars:
;si,di,bx,al,ah
;-----------------------------------------------------------
Proc drawWonder
    mov si,offset wonderWoman
    push [placePicXWonder]
    pop [cuRRENTXWonder]
    push [placePicYWonder]
    pop [CURRENTYWonder]
    push [placePicXWonder]   ;העברת רוחב המערך על מנת לבדוק גבולות ציור
    pop bx
    add bx,34
	push [placePicYWonder]  ;העברת אורך הציור על מנת לבדוק גבולות ציור
	pop di
	add di,32
	
again15: 
    mov cx,[currentXWonder]   ;מיקום נוכחי של ציור הנקודה מתוך הציור
    mov dx,[currentYWonder]
	cmp [byte si],01
	je change19
	jmp again62
change19:
    mov [byte si],11
	jmp again62
again62:	
	mov al,[byte si]
	mov ah,0ch
	inc si
  	int 10h
    inc [currentXWonder]
  cmp [currentXWonder],bx   ;בדיקה אם נגמרה השורה 
    jne again15
    inc [currentYWonder]
    push [placePicXWonder]
	pop [currentXWonder]
    cmp [currentYWonder],di
    jnz again15
	
	
	ret
	ENDP drawWonder
;----------------------------------------------------------
;PROC GET KEY
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   the kod of the key in ah register.
; Registers
;  ah
;--------------------------------------------------------
PROC getKey
mov ah,00h
int 16h
ret
ENDP getKey
;----------------------------------------------------------
;PROC move for level 1
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   check if the place is empaty,move the character.
; Registers
;  ah,si,di
;--------------------------------------------------------
PROC move1
  
   cmp ah,1h
   je finish10
   cmp ah,4DH
   je right2
   cmp ah,4Bh
   je left2
   cmp ah,48h
   je up2
   cmp ah,50h
   je down2
   JMP FINISH10
   
   
right2:
     inc di    ;מקדמים את די אי כדי לבדוק מה נמצא במשבצת הבאה
	 cmp [byte di],5       ;משווים לערך שמייצג מכשול שאסור לעבור דרכו
	 je noRight2
	 mov si,offset grayspace
	 call deletecar
     add [PlacePicXcar],20	 
     call drawcar 
	 jmp finish2
noRight2:
    dec di
    jmp finish2
	
noLeft2:
       inc di
       jmp finish2	   
finish10:
         jmp finish2	 
left2:       
      dec di 
	 cmp [byte di],5
	 je noLeft2
	   mov si,offset grayspace
	  call deletecar
    sub [PLACEPICXcar],20
	     call drawcar 
	     jmp finish2


up2:
     sub di,16
	 cmp [byte di],5
	 je noUp2
	   mov si,offset grayspace
	  call deletecar
     sub [placePicYcar],20
	 call drawcar
	jmp finish2
noUp2:
    add di,16
    jmp finish2	
	
noDown2:
    sub di,16
    jmp finish2
down2:
         add di,16
		 cmp [byte di],5
		 je noDown2
		  mov si,offset grayspace
		  call deletecar
         add [placePicYcar],20
	    call drawcar
        jmp finish2
finish2:
ret
ENDP move1
;----------------------------------------------------------
;PROC move for level 2
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   check if the place is empaty,move the character.
; Registers
;  ah,si,di
;--------------------------------------------------------
PROC move2
  
   cmp ah,1h
   je finish11
   cmp ah,4DH
   je right
   cmp ah,4Bh
   je left
   cmp ah,48h
   je up
   cmp ah,50h
   je down
   JMP FINISH11
   
   
right:
     inc di 
	 cmp [byte di],8
	 je noRight
	 mov si,offset greenspace
	 call deleteman
     add [PlacePicXman],20
mov si,offset greenMan	 
     call drawman 
	 jmp finish
noRight:
    dec di
    jmp finish
finish11:
        jmp finish	
noLeft:
       inc di
       jmp finish	   
	 
left:       
      dec di 
	 cmp [byte di],8
	 je noLeft
	  mov si,offset greenspace
	  call deleteMan
    sub [PLACEPICXman],20
	mov si,offset greenMan
	     call drawman 
	     jmp finish


up:
     sub di,16
	 cmp [byte di],8
	 je noUp
	  mov si,offset greenspace
	  call deleteMan
     sub [placePicYman],20
	 mov si,offset greenMan
	 call drawman 
	jmp finish
noUp:
    add di,16
    jmp finish	
	
noDown:
    sub di,16
    jmp finish
down:
         add di,16
		 cmp [byte di],8
		 je noDown
		  mov si,offset greenspace
		  call deleteMan
         add [placePicYman],20
		 mov si,offset greenMan
	    call drawman
        jmp finish

finish:
ret
ENDP move2
;----------------------------------------------------------
;PROC move for level 3
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   check if the place is empaty,move the character.
; Registers
;  ah,si,di
;--------------------------------------------------------
PROC move3
  
   cmp ah,1h
   je finish11
   cmp ah,4DH
   je right3
   cmp ah,4Bh
   je left3
   cmp ah,48h
   je up3
   cmp ah,50h
   je down3
   JMP FINISH3
   
   
right3:
     inc di 
	 cmp [byte di],1
	 je noRight3
	 mov si,offset bluespace
	 call deleteman
     add [PlacePicXman],20	 
	 mov si,offset man
     call drawman 
	 jmp finish3
noRight3:
    dec di
    jmp finish3
finish3:
        jmp finish13	
noLeft3:
       inc di
       jmp finish13	   
	 
left3:       
      dec di 
	 cmp [byte di],1
	 je noLeft3
	  mov si,offset bluespace
	  call deleteMan
    sub [PLACEPICXman],20
	 mov si,offset man
	     call drawman 
	     jmp finish13


up3:
     sub di,16
	 cmp [byte di],1
	 je noUp3
	  mov si,offset bluespace
	  call deleteMan
     sub [placePicYman],20
	  mov si,offset man
	 call drawman 
	jmp finish13
noUp3:
    add di,16
    jmp finish13	
	
noDown3:
    sub di,16
    jmp finish13
down3:
         add di,16
		 cmp [byte di],1
		 je noDown3
		  mov si,offset bluespace
		  call deleteMan
         add [placePicYman],20
		  mov si,offset man
	    call drawman
        jmp finish13

finish13:
ret
ENDP move3
;--------------------------------------------------------
;PROC drow witch
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   The drawing of the witch.
; Registers
;  si,di,bx
;--------------------------------------------------------
PROC drowWitch
 mov si,offset witch
    push [placePicXWitch]
    pop [cuRRENTXWitch]
    push [placePicYWitch]
    pop [CURRENTYWitch]
    push [placePicXWitch]
    pop bx
    add bx,33
	push [placePicYWitch]
	pop di
	add di,35
	
again2: 
    mov cx,[currentXWitch]
    mov dx,[currentYWitch]
	cmp [byte si],01
	je change9
	jmp regular
change9:
    mov [byte si],11
regular:    	
	mov al,[byte si]
	mov ah,0ch
	int 10h
    inc [currentXWitch]
	inc si
    cmp [currentxWitch],bx
    jne again2
    inc [currentYWitch]
    push [placePicXWitch]
	pop [currentXWitch]
    cmp [currentYWitch],di
    jnz again2
ret
ENDP drowWitch
;--------------------------------------------------------
;PROC drow man
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   The drawing of the man.
; Registers
;  si,di,bx
;--------------------------------------------------------
PROC drawMan
    push [placePicXman]
    pop [cuRRENTXman]
    push [placePicYman]
    pop [currentYman]
    push [placePicXman]
    pop bx
    add bx,20
	push [placePicYMan]
    add [placePicYman],20
	push di
	push [placepicyman]
	pop di
	
again3:
    mov cx,[currentXman]
    mov dx,[currentYman]
	mov al,[byte si]
	mov ah,0ch
	int 10h
    inc [currentXman]
	inc si
    cmp [currentxman],bx
    jne again3
    inc [currentYman]
    push [placePicXman]
    pop [currentXman]
    cmp [currentyman],di
    jl again3
    pop di
    pop [placepicyman]
ret
ENDP drawMan
;----------------------------------------
;PROC delete the man
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   Drawing an empaty space in the character's size.
; Registers
; bx,di,si 
;--------------------------------------------------------
PROC deleteman
  push [placePicXman]
    pop [cuRRENTXman]
    push [placePicYman]
    pop [currentYman]
    push [placePicXman]
    pop bx
    add bx,20
	push [placePicYman]
    add [placePicyman],20
	push di
	push [placepicyman]
	pop di
	
again63:
    mov cx,[currentXman]
    mov dx,[currentYman]
	mov al,[byte si]
	mov ah,0ch
	int 10h
    inc [currentXman]
	inc si
    cmp [currentxman],bx
    jne again63
    inc [currentYman]
    push [placePicXman]
    pop [currentXman]
    cmp [currentyman],di
    jl again63
    pop di
    pop [placepicyman]
	MOV [CURRENTXMAN],0
	MOV [CURRENTYMAN],0
ret
ENDP deleteMan
;----------------------------------------
;PROC delete the car
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   Drawing an empaty space in the character's size.
; Registers
; bx,di,si 
;--------------------------------------------------------
PROC deletecar
  push [placePicXcar]
    pop [cuRRENTXman]
    push [placePicYcar]
    pop [currentYman]
    push [placePicXcar]
    pop bx
    add bx,20
	push [placePicYcar]
    add [placePicycar],20
	push di
	push [placepicycar]
	pop di
	
again53:
    mov cx,[currentXman]
    mov dx,[currentYman]
	mov al,[byte si]
	mov ah,0ch
	int 10h
    inc [currentXman]
	inc si
    cmp [currentxman],bx
    jne again53
    inc [currentYman]
    push [placePicXcar]
    pop [currentXman]
    cmp [currentyman],di
    jl again53
    pop di
    pop [placepicycar]
	MOV [CURRENTXMAN],0
	MOV [CURRENTYMAN],0
ret
ENDP deletecar
;--------------------------------------------------------
;PROC drow car
;----------------------------------------------------------
; Input:
; 	No input
; Output:
;   The drawing of the car
; Registers
;  si,di,bx
;--------------------------------------------------------
PROC drawcar
 mov si,offset car
    push [placePicXcar]
    pop [cuRRENTXman]
    push [placePicYcar]
    pop [currentYman]
    push [placePicXcar]
    pop bx
    add bx,20
	push [placePicYcar]
    add [placePicycar],20
	push di
	push [placepicycar]
	pop di
	
again23:
    mov cx,[currentXman]
    mov dx,[currentYman]
	mov al,[byte si]
	mov ah,0ch
	int 10h
    inc [currentXman]
	inc si
    cmp [currentxman],bx
    jne again23
    inc [currentYman]
    push [placePicXcar]
    pop [currentXman]
    cmp [currentyman],di
    jl again23
    pop di
    pop [placepicycar]
	MOV [CURRENTXMAN],0
	MOV [CURRENTYMAN],0
ret
ENDP drawcar
;--------------------------------------------------------
;PROC drow princes
;----------------------------------------------------------
; Input:
; 	no input
; Output:
;   The drawing of the princes
; Registers
;  si,di,bx
;--------------------------------------------------------
PROC drawprinces
 mov si,offset princes
    push [placePicXprinces]
    pop [cuRRENTXWitch]
    push [placePicYprinces]
    pop [CURRENTYWitch]
    push [placePicXprinces]
    pop bx
    add bx,27
	push [placePicYprinces]
	pop di
	add di,33
	
again72: 
    mov cx,[currentXWitch]
    mov dx,[currentYWitch]
	mov al,[byte si]
	mov ah,0ch
	int 10h
    inc [currentXWitch]
	inc si
    cmp [currentxWitch],bx
    jne again72
    inc [currentYWitch]
    push [placePicXprinces]
	pop [currentXWitch]
    cmp [currentYWitch],di
    jnz again72
ret
ENDP drawprinces


END start
